<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Bank_Personal_Loan_Modelling (1)' inline='true' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bank_Personal_Loan_Modelling (1)' name='textscan.003gmh31o6fjkj117y4sq1c43qqo'>
            <connection class='textscan' directory='C:/Users/hamid/OneDrive/Documents/Mangement Science/Year 2/Data Analytics 2/Individual Project' filename='Bank_Personal_Loan_Modelling (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.003gmh31o6fjkj117y4sq1c43qqo' name='Bank_Personal_Loan_Modelling (1).csv' table='[Bank_Personal_Loan_Modelling (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='integer' name='Age' ordinal='1' />
            <column datatype='integer' name='Experience' ordinal='2' />
            <column datatype='integer' name='Income' ordinal='3' />
            <column datatype='integer' name='ZIP Code' ordinal='4' />
            <column datatype='integer' name='Family' ordinal='5' />
            <column datatype='real' name='CCAvg' ordinal='6' />
            <column datatype='integer' name='Education' ordinal='7' />
            <column datatype='integer' name='Mortgage' ordinal='8' />
            <column datatype='integer' name='Personal Loan' ordinal='9' />
            <column datatype='integer' name='Securities Account' ordinal='10' />
            <column datatype='integer' name='CD Account' ordinal='11' />
            <column datatype='integer' name='Online' ordinal='12' />
            <column datatype='integer' name='CreditCard' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Experience]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Experience</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP Code]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>ZIP Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCAvg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCAvg]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>CCAvg</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Education]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Education</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortgage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mortgage]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Mortgage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal Loan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal Loan]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Personal Loan</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Securities Account</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Securities Account]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Securities Account</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CD Account</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CD Account]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>CD Account</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Online</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Online]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>Online</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditCard</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CreditCard]</local-name>
            <parent-name>[Bank_Personal_Loan_Modelling (1).csv]</parent-name>
            <remote-alias>CreditCard</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[Age]' peg='0' size='3.64' />
      </column>
      <column datatype='string' name='[Age (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;High Age&quot;'>
            <value>53</value>
            <value>54</value>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
          </bin>
          <bin default-name='false' value='&quot;Low Age&quot;'>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
          </bin>
          <bin default-name='false' value='&quot;Mid Age &quot;'>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='CreditCardSpendAVG' datatype='real' name='[CCAvg]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[CD Account]' role='dimension' type='ordinal' />
      <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
      </column>
      <column caption='Securities Accounts' datatype='string' name='[Calculation_981221806951211010]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If[Securities Account]= 0 THEN &quot;Yes&quot; else &quot;No&quot; end' />
      </column>
      <column caption='Credit Cards' datatype='string' name='[Calculation_981221806957752323]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If[CreditCard]= 0 THEN &quot;Yes&quot; else &quot;No&quot; end' />
      </column>
      <column caption='CD Accounts' datatype='string' name='[Calculation_981221808737165316]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if[CD Account] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
      </column>
      <column aggregation='Sum' caption='Credit Card' datatype='integer' name='[CreditCard]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Education]' role='dimension' type='ordinal' />
      <column caption='Experience (bin)' datatype='integer' name='[Experience (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[Experience]' peg='0' size='3.74' />
      </column>
      <column datatype='integer' name='[Experience]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Family]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Income (bin)' datatype='integer' name='[Income (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Income]' peg='0' size='11.2' />
      </column>
      <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Mortgage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Online]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Securities Account]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[ZIP Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Calculation_981221806949744640]' derivation='Count' name='[cnt:Calculation_981221806949744640:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
      <column-instance column='[Experience]' derivation='None' name='[none:Experience:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income]' derivation='None' name='[none:Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortgage]' derivation='None' name='[none:Mortgage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Online]' derivation='None' name='[none:Online:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Personal Loan]' derivation='None' name='[none:Personal Loan:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ZIP Code]' derivation='None' name='[none:ZIP Code:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Experience,Mortgage)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Experience:qk]' />
          <groupfilter function='level-members' level='[none:Mortgage:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Income,Mortgage)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Income:qk]' />
          <groupfilter function='level-members' level='[none:Mortgage:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Personal Loan,ZIP Code)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Personal Loan:ok]' />
          <groupfilter function='level-members' level='[none:ZIP Code:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Personal Loans,ZIP Code)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_981221806949744640:nk]' />
          <groupfilter function='level-members' level='[none:ZIP Code:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.607884' measure-ordering='alphabetic' measure-percentage='0.392116' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Personal Loan:ok]' palette='purple_10_0' type='palette'>
            <map to='#005500'>
              <bucket>1</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:Calculation_981221806949744640:qk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Online:ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>1</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_981221806949744640:nk]' palette='purple_10_0' type='palette'>
            <map to='#00aa00'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ee2004'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Where are our customers?' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Personal Loans' />
        <param name='target' value='Where are our customers?' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='How Income and Age influence personal Loans' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Personal Loan' />
        <param name='target' value='How Income and Age influence personal Loans' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age And Experience'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column datatype='integer' name='[Experience]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience]' derivation='None' name='[none:Experience:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Experience:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Age:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Age vs Average Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Age]' peg='0' size='3.64' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Personal Loan]' derivation='None' name='[none:Personal Loan:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Personal Loan:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:Income:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Experience and Credit Card Spending'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='CreditCardSpendAVG' datatype='real' name='[CCAvg]' role='measure' type='quantitative' />
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column caption='Experience (bin)' datatype='integer' name='[Experience (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Experience]' peg='0' size='3.74' />
            </column>
            <column datatype='integer' name='[Experience]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[CCAvg]' derivation='Avg' name='[avg:CCAvg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience (bin)]' derivation='None' name='[none:Experience (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:CCAvg:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Experience (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Experience (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='How Income and Age influence personal Loans'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column caption='Income (bin)' datatype='integer' name='[Income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[Income]' peg='0' size='11.2' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income (bin)]' derivation='None' name='[none:Income (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:Age:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Income (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='How Income is related to Securities Accounts and Credit Cards'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column aggregation='Sum' datatype='integer' name='[CD Account]' role='dimension' type='ordinal' />
            <column caption='Securities Accounts' datatype='string' name='[Calculation_981221806951211010]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If[Securities Account]= 0 THEN &quot;Yes&quot; else &quot;No&quot; end' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Securities Account]' role='dimension' type='ordinal' />
            <column-instance column='[CD Account]' derivation='None' name='[none:CD Account:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_981221806951211010]' derivation='None' name='[none:Calculation_981221806951211010:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]</rows>
        <cols>([federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806951211010:nk] / [federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CD Account:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of having a securities account'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column datatype='string' name='[Age (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;High Age&quot;'>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                </bin>
                <bin default-name='false' value='&quot;Low Age&quot;'>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Age &quot;'>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[CD Account]' role='dimension' type='ordinal' />
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column caption='CD Accounts' datatype='string' name='[Calculation_981221808737165316]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[CD Account] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Income]' derivation='Median' name='[med:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_981221808737165316]' derivation='None' name='[none:Calculation_981221808737165316:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[med:Income:qk]</rows>
        <cols>([federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221808737165316:nk] / [federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Age (group)])</cols>
      </table>
    </worksheet>
    <worksheet name='Income, Family Size and Personal Loans'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Family]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Family]' derivation='None' name='[none:Family:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:Income:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Family:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Mortgage vs Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortgage vs Income&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mortgage]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mortgage]' derivation='None' name='[none:Mortgage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Exclusions (Income,Mortgage)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Income:qk]' />
                <groupfilter function='level-members' level='[none:Mortgage:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Mortgage:qk]' member='0' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Income:qk]' member='8' />
                    <groupfilter function='member' level='[none:Income:qk]' member='9' />
                    <groupfilter function='member' level='[none:Income:qk]' member='10' />
                    <groupfilter function='member' level='[none:Income:qk]' member='11' />
                    <groupfilter function='member' level='[none:Income:qk]' member='12' />
                    <groupfilter function='member' level='[none:Income:qk]' member='13' />
                    <groupfilter function='member' level='[none:Income:qk]' member='14' />
                    <groupfilter function='member' level='[none:Income:qk]' member='15' />
                    <groupfilter function='member' level='[none:Income:qk]' member='18' />
                    <groupfilter function='member' level='[none:Income:qk]' member='19' />
                    <groupfilter function='member' level='[none:Income:qk]' member='20' />
                    <groupfilter function='member' level='[none:Income:qk]' member='21' />
                    <groupfilter function='member' level='[none:Income:qk]' member='22' />
                    <groupfilter function='member' level='[none:Income:qk]' member='23' />
                    <groupfilter function='member' level='[none:Income:qk]' member='24' />
                    <groupfilter function='member' level='[none:Income:qk]' member='25' />
                    <groupfilter function='member' level='[none:Income:qk]' member='28' />
                    <groupfilter function='member' level='[none:Income:qk]' member='29' />
                    <groupfilter function='member' level='[none:Income:qk]' member='30' />
                    <groupfilter function='member' level='[none:Income:qk]' member='31' />
                    <groupfilter function='member' level='[none:Income:qk]' member='32' />
                    <groupfilter function='member' level='[none:Income:qk]' member='33' />
                    <groupfilter function='member' level='[none:Income:qk]' member='34' />
                    <groupfilter function='member' level='[none:Income:qk]' member='35' />
                    <groupfilter function='member' level='[none:Income:qk]' member='38' />
                    <groupfilter function='member' level='[none:Income:qk]' member='39' />
                    <groupfilter function='member' level='[none:Income:qk]' member='40' />
                    <groupfilter function='member' level='[none:Income:qk]' member='41' />
                    <groupfilter function='member' level='[none:Income:qk]' member='42' />
                    <groupfilter function='member' level='[none:Income:qk]' member='43' />
                    <groupfilter function='member' level='[none:Income:qk]' member='44' />
                    <groupfilter function='member' level='[none:Income:qk]' member='45' />
                    <groupfilter function='member' level='[none:Income:qk]' member='48' />
                    <groupfilter function='member' level='[none:Income:qk]' member='49' />
                    <groupfilter function='member' level='[none:Income:qk]' member='50' />
                    <groupfilter function='member' level='[none:Income:qk]' member='51' />
                    <groupfilter function='member' level='[none:Income:qk]' member='52' />
                    <groupfilter function='member' level='[none:Income:qk]' member='53' />
                    <groupfilter function='member' level='[none:Income:qk]' member='54' />
                    <groupfilter function='member' level='[none:Income:qk]' member='55' />
                    <groupfilter function='member' level='[none:Income:qk]' member='58' />
                    <groupfilter function='member' level='[none:Income:qk]' member='59' />
                    <groupfilter function='member' level='[none:Income:qk]' member='60' />
                    <groupfilter function='member' level='[none:Income:qk]' member='61' />
                    <groupfilter function='member' level='[none:Income:qk]' member='62' />
                    <groupfilter function='member' level='[none:Income:qk]' member='63' />
                    <groupfilter function='member' level='[none:Income:qk]' member='64' />
                    <groupfilter function='member' level='[none:Income:qk]' member='65' />
                    <groupfilter function='member' level='[none:Income:qk]' member='68' />
                    <groupfilter function='member' level='[none:Income:qk]' member='69' />
                    <groupfilter function='member' level='[none:Income:qk]' member='70' />
                    <groupfilter function='member' level='[none:Income:qk]' member='71' />
                    <groupfilter function='member' level='[none:Income:qk]' member='72' />
                    <groupfilter function='member' level='[none:Income:qk]' member='73' />
                    <groupfilter function='member' level='[none:Income:qk]' member='74' />
                    <groupfilter function='member' level='[none:Income:qk]' member='75' />
                    <groupfilter function='member' level='[none:Income:qk]' member='78' />
                    <groupfilter function='member' level='[none:Income:qk]' member='79' />
                    <groupfilter function='member' level='[none:Income:qk]' member='80' />
                    <groupfilter function='member' level='[none:Income:qk]' member='81' />
                    <groupfilter function='member' level='[none:Income:qk]' member='82' />
                    <groupfilter function='member' level='[none:Income:qk]' member='83' />
                    <groupfilter function='member' level='[none:Income:qk]' member='84' />
                    <groupfilter function='member' level='[none:Income:qk]' member='85' />
                    <groupfilter function='member' level='[none:Income:qk]' member='88' />
                    <groupfilter function='member' level='[none:Income:qk]' member='89' />
                    <groupfilter function='member' level='[none:Income:qk]' member='90' />
                    <groupfilter function='member' level='[none:Income:qk]' member='91' />
                    <groupfilter function='member' level='[none:Income:qk]' member='92' />
                    <groupfilter function='member' level='[none:Income:qk]' member='93' />
                    <groupfilter function='member' level='[none:Income:qk]' member='94' />
                    <groupfilter function='member' level='[none:Income:qk]' member='95' />
                    <groupfilter function='member' level='[none:Income:qk]' member='98' />
                    <groupfilter function='member' level='[none:Income:qk]' member='99' />
                    <groupfilter function='member' level='[none:Income:qk]' member='100' />
                    <groupfilter function='member' level='[none:Income:qk]' member='101' />
                    <groupfilter function='member' level='[none:Income:qk]' member='102' />
                    <groupfilter function='member' level='[none:Income:qk]' member='103' />
                    <groupfilter function='member' level='[none:Income:qk]' member='104' />
                    <groupfilter function='member' level='[none:Income:qk]' member='105' />
                    <groupfilter function='member' level='[none:Income:qk]' member='108' />
                    <groupfilter function='member' level='[none:Income:qk]' member='109' />
                    <groupfilter function='member' level='[none:Income:qk]' member='110' />
                    <groupfilter function='member' level='[none:Income:qk]' member='111' />
                    <groupfilter function='member' level='[none:Income:qk]' member='112' />
                    <groupfilter function='member' level='[none:Income:qk]' member='113' />
                    <groupfilter function='member' level='[none:Income:qk]' member='114' />
                    <groupfilter function='member' level='[none:Income:qk]' member='115' />
                    <groupfilter function='member' level='[none:Income:qk]' member='118' />
                    <groupfilter function='member' level='[none:Income:qk]' member='119' />
                    <groupfilter function='member' level='[none:Income:qk]' member='120' />
                    <groupfilter function='member' level='[none:Income:qk]' member='121' />
                    <groupfilter function='member' level='[none:Income:qk]' member='122' />
                    <groupfilter function='member' level='[none:Income:qk]' member='123' />
                    <groupfilter function='member' level='[none:Income:qk]' member='124' />
                    <groupfilter function='member' level='[none:Income:qk]' member='125' />
                    <groupfilter function='member' level='[none:Income:qk]' member='128' />
                    <groupfilter function='member' level='[none:Income:qk]' member='129' />
                    <groupfilter function='member' level='[none:Income:qk]' member='130' />
                    <groupfilter function='member' level='[none:Income:qk]' member='131' />
                    <groupfilter function='member' level='[none:Income:qk]' member='132' />
                    <groupfilter function='member' level='[none:Income:qk]' member='133' />
                    <groupfilter function='member' level='[none:Income:qk]' member='134' />
                    <groupfilter function='member' level='[none:Income:qk]' member='135' />
                    <groupfilter function='member' level='[none:Income:qk]' member='138' />
                    <groupfilter function='member' level='[none:Income:qk]' member='139' />
                    <groupfilter function='member' level='[none:Income:qk]' member='140' />
                    <groupfilter function='member' level='[none:Income:qk]' member='141' />
                    <groupfilter function='member' level='[none:Income:qk]' member='142' />
                    <groupfilter function='member' level='[none:Income:qk]' member='143' />
                    <groupfilter function='member' level='[none:Income:qk]' member='144' />
                    <groupfilter function='member' level='[none:Income:qk]' member='145' />
                    <groupfilter function='member' level='[none:Income:qk]' member='148' />
                    <groupfilter function='member' level='[none:Income:qk]' member='149' />
                    <groupfilter function='member' level='[none:Income:qk]' member='150' />
                    <groupfilter function='member' level='[none:Income:qk]' member='151' />
                    <groupfilter function='member' level='[none:Income:qk]' member='152' />
                    <groupfilter function='member' level='[none:Income:qk]' member='153' />
                    <groupfilter function='member' level='[none:Income:qk]' member='154' />
                    <groupfilter function='member' level='[none:Income:qk]' member='155' />
                    <groupfilter function='member' level='[none:Income:qk]' member='158' />
                    <groupfilter function='member' level='[none:Income:qk]' member='159' />
                    <groupfilter function='member' level='[none:Income:qk]' member='160' />
                    <groupfilter function='member' level='[none:Income:qk]' member='161' />
                    <groupfilter function='member' level='[none:Income:qk]' member='162' />
                    <groupfilter function='member' level='[none:Income:qk]' member='163' />
                    <groupfilter function='member' level='[none:Income:qk]' member='164' />
                    <groupfilter function='member' level='[none:Income:qk]' member='165' />
                    <groupfilter function='member' level='[none:Income:qk]' member='168' />
                    <groupfilter function='member' level='[none:Income:qk]' member='169' />
                    <groupfilter function='member' level='[none:Income:qk]' member='170' />
                    <groupfilter function='member' level='[none:Income:qk]' member='171' />
                    <groupfilter function='member' level='[none:Income:qk]' member='172' />
                    <groupfilter function='member' level='[none:Income:qk]' member='173' />
                    <groupfilter function='member' level='[none:Income:qk]' member='174' />
                    <groupfilter function='member' level='[none:Income:qk]' member='175' />
                    <groupfilter function='member' level='[none:Income:qk]' member='178' />
                    <groupfilter function='member' level='[none:Income:qk]' member='179' />
                    <groupfilter function='member' level='[none:Income:qk]' member='180' />
                    <groupfilter function='member' level='[none:Income:qk]' member='181' />
                    <groupfilter function='member' level='[none:Income:qk]' member='182' />
                    <groupfilter function='member' level='[none:Income:qk]' member='183' />
                    <groupfilter function='member' level='[none:Income:qk]' member='184' />
                    <groupfilter function='member' level='[none:Income:qk]' member='185' />
                    <groupfilter function='member' level='[none:Income:qk]' member='188' />
                    <groupfilter function='member' level='[none:Income:qk]' member='189' />
                    <groupfilter function='member' level='[none:Income:qk]' member='190' />
                    <groupfilter function='member' level='[none:Income:qk]' member='191' />
                    <groupfilter function='member' level='[none:Income:qk]' member='192' />
                    <groupfilter function='member' level='[none:Income:qk]' member='193' />
                    <groupfilter function='member' level='[none:Income:qk]' member='194' />
                    <groupfilter function='member' level='[none:Income:qk]' member='195' />
                    <groupfilter function='member' level='[none:Income:qk]' member='198' />
                    <groupfilter function='member' level='[none:Income:qk]' member='199' />
                    <groupfilter function='member' level='[none:Income:qk]' member='200' />
                    <groupfilter function='member' level='[none:Income:qk]' member='201' />
                    <groupfilter function='member' level='[none:Income:qk]' member='202' />
                    <groupfilter function='member' level='[none:Income:qk]' member='203' />
                    <groupfilter function='member' level='[none:Income:qk]' member='204' />
                    <groupfilter function='member' level='[none:Income:qk]' member='218' />
                    <groupfilter function='member' level='[none:Income:qk]' member='224' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Income:qk]' />
                  <hierarchy name='[none:Mortgage:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Exclusions (Income,Mortgage)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Mortgage:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mortgage vs Income (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Credit Card Spending, Mortgage and Income&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='CreditCardSpendAVG' datatype='real' name='[CCAvg]' role='measure' type='quantitative' />
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mortgage]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[CCAvg]' derivation='None' name='[none:CCAvg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mortgage]' derivation='None' name='[none:Mortgage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Exclusions (Income,Mortgage)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Income:qk]' />
                <groupfilter function='level-members' level='[none:Mortgage:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Mortgage:qk]' member='0' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Income:qk]' member='8' />
                    <groupfilter function='member' level='[none:Income:qk]' member='9' />
                    <groupfilter function='member' level='[none:Income:qk]' member='10' />
                    <groupfilter function='member' level='[none:Income:qk]' member='11' />
                    <groupfilter function='member' level='[none:Income:qk]' member='12' />
                    <groupfilter function='member' level='[none:Income:qk]' member='13' />
                    <groupfilter function='member' level='[none:Income:qk]' member='14' />
                    <groupfilter function='member' level='[none:Income:qk]' member='15' />
                    <groupfilter function='member' level='[none:Income:qk]' member='18' />
                    <groupfilter function='member' level='[none:Income:qk]' member='19' />
                    <groupfilter function='member' level='[none:Income:qk]' member='20' />
                    <groupfilter function='member' level='[none:Income:qk]' member='21' />
                    <groupfilter function='member' level='[none:Income:qk]' member='22' />
                    <groupfilter function='member' level='[none:Income:qk]' member='23' />
                    <groupfilter function='member' level='[none:Income:qk]' member='24' />
                    <groupfilter function='member' level='[none:Income:qk]' member='25' />
                    <groupfilter function='member' level='[none:Income:qk]' member='28' />
                    <groupfilter function='member' level='[none:Income:qk]' member='29' />
                    <groupfilter function='member' level='[none:Income:qk]' member='30' />
                    <groupfilter function='member' level='[none:Income:qk]' member='31' />
                    <groupfilter function='member' level='[none:Income:qk]' member='32' />
                    <groupfilter function='member' level='[none:Income:qk]' member='33' />
                    <groupfilter function='member' level='[none:Income:qk]' member='34' />
                    <groupfilter function='member' level='[none:Income:qk]' member='35' />
                    <groupfilter function='member' level='[none:Income:qk]' member='38' />
                    <groupfilter function='member' level='[none:Income:qk]' member='39' />
                    <groupfilter function='member' level='[none:Income:qk]' member='40' />
                    <groupfilter function='member' level='[none:Income:qk]' member='41' />
                    <groupfilter function='member' level='[none:Income:qk]' member='42' />
                    <groupfilter function='member' level='[none:Income:qk]' member='43' />
                    <groupfilter function='member' level='[none:Income:qk]' member='44' />
                    <groupfilter function='member' level='[none:Income:qk]' member='45' />
                    <groupfilter function='member' level='[none:Income:qk]' member='48' />
                    <groupfilter function='member' level='[none:Income:qk]' member='49' />
                    <groupfilter function='member' level='[none:Income:qk]' member='50' />
                    <groupfilter function='member' level='[none:Income:qk]' member='51' />
                    <groupfilter function='member' level='[none:Income:qk]' member='52' />
                    <groupfilter function='member' level='[none:Income:qk]' member='53' />
                    <groupfilter function='member' level='[none:Income:qk]' member='54' />
                    <groupfilter function='member' level='[none:Income:qk]' member='55' />
                    <groupfilter function='member' level='[none:Income:qk]' member='58' />
                    <groupfilter function='member' level='[none:Income:qk]' member='59' />
                    <groupfilter function='member' level='[none:Income:qk]' member='60' />
                    <groupfilter function='member' level='[none:Income:qk]' member='61' />
                    <groupfilter function='member' level='[none:Income:qk]' member='62' />
                    <groupfilter function='member' level='[none:Income:qk]' member='63' />
                    <groupfilter function='member' level='[none:Income:qk]' member='64' />
                    <groupfilter function='member' level='[none:Income:qk]' member='65' />
                    <groupfilter function='member' level='[none:Income:qk]' member='68' />
                    <groupfilter function='member' level='[none:Income:qk]' member='69' />
                    <groupfilter function='member' level='[none:Income:qk]' member='70' />
                    <groupfilter function='member' level='[none:Income:qk]' member='71' />
                    <groupfilter function='member' level='[none:Income:qk]' member='72' />
                    <groupfilter function='member' level='[none:Income:qk]' member='73' />
                    <groupfilter function='member' level='[none:Income:qk]' member='74' />
                    <groupfilter function='member' level='[none:Income:qk]' member='75' />
                    <groupfilter function='member' level='[none:Income:qk]' member='78' />
                    <groupfilter function='member' level='[none:Income:qk]' member='79' />
                    <groupfilter function='member' level='[none:Income:qk]' member='80' />
                    <groupfilter function='member' level='[none:Income:qk]' member='81' />
                    <groupfilter function='member' level='[none:Income:qk]' member='82' />
                    <groupfilter function='member' level='[none:Income:qk]' member='83' />
                    <groupfilter function='member' level='[none:Income:qk]' member='84' />
                    <groupfilter function='member' level='[none:Income:qk]' member='85' />
                    <groupfilter function='member' level='[none:Income:qk]' member='88' />
                    <groupfilter function='member' level='[none:Income:qk]' member='89' />
                    <groupfilter function='member' level='[none:Income:qk]' member='90' />
                    <groupfilter function='member' level='[none:Income:qk]' member='91' />
                    <groupfilter function='member' level='[none:Income:qk]' member='92' />
                    <groupfilter function='member' level='[none:Income:qk]' member='93' />
                    <groupfilter function='member' level='[none:Income:qk]' member='94' />
                    <groupfilter function='member' level='[none:Income:qk]' member='95' />
                    <groupfilter function='member' level='[none:Income:qk]' member='98' />
                    <groupfilter function='member' level='[none:Income:qk]' member='99' />
                    <groupfilter function='member' level='[none:Income:qk]' member='100' />
                    <groupfilter function='member' level='[none:Income:qk]' member='101' />
                    <groupfilter function='member' level='[none:Income:qk]' member='102' />
                    <groupfilter function='member' level='[none:Income:qk]' member='103' />
                    <groupfilter function='member' level='[none:Income:qk]' member='104' />
                    <groupfilter function='member' level='[none:Income:qk]' member='105' />
                    <groupfilter function='member' level='[none:Income:qk]' member='108' />
                    <groupfilter function='member' level='[none:Income:qk]' member='109' />
                    <groupfilter function='member' level='[none:Income:qk]' member='110' />
                    <groupfilter function='member' level='[none:Income:qk]' member='111' />
                    <groupfilter function='member' level='[none:Income:qk]' member='112' />
                    <groupfilter function='member' level='[none:Income:qk]' member='113' />
                    <groupfilter function='member' level='[none:Income:qk]' member='114' />
                    <groupfilter function='member' level='[none:Income:qk]' member='115' />
                    <groupfilter function='member' level='[none:Income:qk]' member='118' />
                    <groupfilter function='member' level='[none:Income:qk]' member='119' />
                    <groupfilter function='member' level='[none:Income:qk]' member='120' />
                    <groupfilter function='member' level='[none:Income:qk]' member='121' />
                    <groupfilter function='member' level='[none:Income:qk]' member='122' />
                    <groupfilter function='member' level='[none:Income:qk]' member='123' />
                    <groupfilter function='member' level='[none:Income:qk]' member='124' />
                    <groupfilter function='member' level='[none:Income:qk]' member='125' />
                    <groupfilter function='member' level='[none:Income:qk]' member='128' />
                    <groupfilter function='member' level='[none:Income:qk]' member='129' />
                    <groupfilter function='member' level='[none:Income:qk]' member='130' />
                    <groupfilter function='member' level='[none:Income:qk]' member='131' />
                    <groupfilter function='member' level='[none:Income:qk]' member='132' />
                    <groupfilter function='member' level='[none:Income:qk]' member='133' />
                    <groupfilter function='member' level='[none:Income:qk]' member='134' />
                    <groupfilter function='member' level='[none:Income:qk]' member='135' />
                    <groupfilter function='member' level='[none:Income:qk]' member='138' />
                    <groupfilter function='member' level='[none:Income:qk]' member='139' />
                    <groupfilter function='member' level='[none:Income:qk]' member='140' />
                    <groupfilter function='member' level='[none:Income:qk]' member='141' />
                    <groupfilter function='member' level='[none:Income:qk]' member='142' />
                    <groupfilter function='member' level='[none:Income:qk]' member='143' />
                    <groupfilter function='member' level='[none:Income:qk]' member='144' />
                    <groupfilter function='member' level='[none:Income:qk]' member='145' />
                    <groupfilter function='member' level='[none:Income:qk]' member='148' />
                    <groupfilter function='member' level='[none:Income:qk]' member='149' />
                    <groupfilter function='member' level='[none:Income:qk]' member='150' />
                    <groupfilter function='member' level='[none:Income:qk]' member='151' />
                    <groupfilter function='member' level='[none:Income:qk]' member='152' />
                    <groupfilter function='member' level='[none:Income:qk]' member='153' />
                    <groupfilter function='member' level='[none:Income:qk]' member='154' />
                    <groupfilter function='member' level='[none:Income:qk]' member='155' />
                    <groupfilter function='member' level='[none:Income:qk]' member='158' />
                    <groupfilter function='member' level='[none:Income:qk]' member='159' />
                    <groupfilter function='member' level='[none:Income:qk]' member='160' />
                    <groupfilter function='member' level='[none:Income:qk]' member='161' />
                    <groupfilter function='member' level='[none:Income:qk]' member='162' />
                    <groupfilter function='member' level='[none:Income:qk]' member='163' />
                    <groupfilter function='member' level='[none:Income:qk]' member='164' />
                    <groupfilter function='member' level='[none:Income:qk]' member='165' />
                    <groupfilter function='member' level='[none:Income:qk]' member='168' />
                    <groupfilter function='member' level='[none:Income:qk]' member='169' />
                    <groupfilter function='member' level='[none:Income:qk]' member='170' />
                    <groupfilter function='member' level='[none:Income:qk]' member='171' />
                    <groupfilter function='member' level='[none:Income:qk]' member='172' />
                    <groupfilter function='member' level='[none:Income:qk]' member='173' />
                    <groupfilter function='member' level='[none:Income:qk]' member='174' />
                    <groupfilter function='member' level='[none:Income:qk]' member='175' />
                    <groupfilter function='member' level='[none:Income:qk]' member='178' />
                    <groupfilter function='member' level='[none:Income:qk]' member='179' />
                    <groupfilter function='member' level='[none:Income:qk]' member='180' />
                    <groupfilter function='member' level='[none:Income:qk]' member='181' />
                    <groupfilter function='member' level='[none:Income:qk]' member='182' />
                    <groupfilter function='member' level='[none:Income:qk]' member='183' />
                    <groupfilter function='member' level='[none:Income:qk]' member='184' />
                    <groupfilter function='member' level='[none:Income:qk]' member='185' />
                    <groupfilter function='member' level='[none:Income:qk]' member='188' />
                    <groupfilter function='member' level='[none:Income:qk]' member='189' />
                    <groupfilter function='member' level='[none:Income:qk]' member='190' />
                    <groupfilter function='member' level='[none:Income:qk]' member='191' />
                    <groupfilter function='member' level='[none:Income:qk]' member='192' />
                    <groupfilter function='member' level='[none:Income:qk]' member='193' />
                    <groupfilter function='member' level='[none:Income:qk]' member='194' />
                    <groupfilter function='member' level='[none:Income:qk]' member='195' />
                    <groupfilter function='member' level='[none:Income:qk]' member='198' />
                    <groupfilter function='member' level='[none:Income:qk]' member='199' />
                    <groupfilter function='member' level='[none:Income:qk]' member='200' />
                    <groupfilter function='member' level='[none:Income:qk]' member='201' />
                    <groupfilter function='member' level='[none:Income:qk]' member='202' />
                    <groupfilter function='member' level='[none:Income:qk]' member='203' />
                    <groupfilter function='member' level='[none:Income:qk]' member='204' />
                    <groupfilter function='member' level='[none:Income:qk]' member='218' />
                    <groupfilter function='member' level='[none:Income:qk]' member='224' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Income:qk]' />
                  <hierarchy name='[none:Mortgage:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Exclusions (Income,Mortgage)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CCAvg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Mortgage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CCAvg:qk] + [federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Mortgage:qk])</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column datatype='integer' name='[Experience]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience]' derivation='None' name='[none:Experience:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Experience:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Where are our customers?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column caption='Personal Loans' datatype='string' name='[Calculation_981221806949744640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if[Personal Loan] = 1 then &apos;Yes&apos; else &apos;No&apos; end' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Personal Loan]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='*00000' name='[ZIP Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_981221806949744640]' derivation='None' name='[none:Calculation_981221806949744640:nk]' pivot='key' type='nominal' />
            <column-instance column='[Personal Loan]' derivation='None' name='[none:Personal Loan:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ZIP Code]' derivation='None' name='[none:ZIP Code:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Inclusions (Personal Loan,ZIP Code)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Personal Loan:ok]' member='0' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='9307' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90011' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90018' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90027' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90029' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90033' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90034' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90036' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90041' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90044' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90045' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90048' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90049' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90057' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90058' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90059' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90066' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90071' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90073' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90089' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90095' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90210' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90212' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90230' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90232' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90245' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90250' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90254' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90266' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90272' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90274' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90275' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90277' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90280' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90291' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90502' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90504' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90505' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90509' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90601' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90623' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90638' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90639' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90640' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90650' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90717' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90740' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90745' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90755' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90813' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90840' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91030' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91040' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91203' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91207' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91320' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91326' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91330' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91335' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91342' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91343' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91345' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91355' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91360' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91361' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91365' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91367' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91380' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91423' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91706' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91730' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91745' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91754' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91763' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91765' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91768' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91770' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91773' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91775' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91784' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91791' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91902' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91910' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91911' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91941' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91942' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92029' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92038' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92056' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92069' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92084' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92093' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92096' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92120' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92121' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92130' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92152' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92154' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92161' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92173' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92177' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92182' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92220' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92325' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92333' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92346' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92350' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92373' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92374' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92399' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92518' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92624' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92626' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92646' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92647' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92648' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92653' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92660' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92661' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92672' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92673' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92675' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92677' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92691' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92692' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92694' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92697' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92703' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92735' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92780' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92806' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92807' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92833' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92834' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92835' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92843' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92866' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92867' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92868' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92870' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92886' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93033' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93063' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93118' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93437' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93460' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93524' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93561' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93657' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93727' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93907' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93933' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93940' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93943' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93955' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94002' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94015' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94040' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94043' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94061' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94063' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94066' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94080' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94085' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94087' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94102' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94114' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94118' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94132' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94143' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94234' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94303' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94306' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94309' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94402' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94501' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94509' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94523' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94526' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94534' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94536' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94538' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94539' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94542' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94545' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94546' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94550' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94551' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94553' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94558' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94566' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94571' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94575' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94577' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94583' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94588' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94590' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94591' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94596' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94598' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94607' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94608' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94609' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94610' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94618' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94701' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94703' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94706' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94707' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94708' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94803' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94806' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94901' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94904' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94920' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94923' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94928' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94939' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94949' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94960' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94965' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94970' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94998' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95020' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95039' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95045' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95051' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95053' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95060' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95070' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95120' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95133' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95134' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95135' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95136' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95138' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95193' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95207' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95211' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95307' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95348' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95351' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95370' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95422' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95449' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95482' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95518' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95616' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95617' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95621' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95670' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95678' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95758' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95762' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95812' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95814' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95816' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95817' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95818' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95819' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95820' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95822' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95825' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95827' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95828' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95833' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95841' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95842' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95929' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95973' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96001' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96091' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96094' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96145' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96150' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Personal Loan:ok]' member='1' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90027' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90034' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90049' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90057' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90059' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90071' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90073' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90089' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90095' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90210' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90212' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90230' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90245' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90250' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90254' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90277' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90291' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90502' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90504' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90601' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90640' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90650' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90717' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90740' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90840' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91203' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91320' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91330' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91335' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91355' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91360' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91365' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91367' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91380' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91423' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91765' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91768' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91775' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91902' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91911' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91942' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92038' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92056' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92093' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92096' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92121' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92152' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92173' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92182' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92220' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92333' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92626' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92646' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92647' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92660' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92672' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92675' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92677' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92697' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92834' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92870' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93561' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93940' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93943' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93955' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94002' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94061' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94080' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94085' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94102' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94114' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94143' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94234' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94303' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94306' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94309' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94402' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94501' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94523' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94534' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94536' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94542' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94545' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94546' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94551' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94553' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94583' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94588' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94590' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94596' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94607' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94608' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94609' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94610' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94707' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94803' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94901' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94904' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94920' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94928' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94949' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94960' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94998' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95020' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95039' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95051' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95053' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95060' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95070' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95133' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95134' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95135' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95136' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95138' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95211' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95449' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95616' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95758' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95762' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95814' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95818' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95819' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95822' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95828' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95841' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95929' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95973' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96008' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Inclusions (Personal Loans,ZIP Code)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Calculation_981221806949744640:nk]' member='&quot;No&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90011' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90018' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90027' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90029' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90033' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90034' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90036' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90041' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90044' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90045' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90048' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90049' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90057' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90058' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90059' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90066' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90071' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90073' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90089' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90095' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90210' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90212' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90230' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90232' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90245' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90250' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90254' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90266' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90272' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90274' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90275' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90277' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90280' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90291' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90502' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90504' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90505' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90509' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90601' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90623' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90638' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90639' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90640' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90650' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90717' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90740' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90745' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90755' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90813' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90840' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91030' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91040' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91203' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91207' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91320' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91326' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91330' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91335' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91342' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91343' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91345' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91355' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91360' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91361' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91365' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91367' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91380' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91423' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91706' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91730' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91745' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91754' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91763' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91765' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91768' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91770' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91773' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91775' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91784' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91791' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91902' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91910' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91911' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91941' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91942' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92029' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92038' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92056' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92069' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92084' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92093' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92096' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92120' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92121' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92130' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92152' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92154' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92161' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92173' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92177' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92182' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92220' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92325' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92333' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92346' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92350' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92373' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92374' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92399' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92518' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92624' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92626' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92646' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92647' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92648' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92653' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92660' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92661' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92672' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92673' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92675' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92677' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92691' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92692' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92694' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92697' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92703' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92735' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92780' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92806' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92807' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92833' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92834' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92835' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92843' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92866' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92867' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92868' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92870' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92886' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93033' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93063' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93118' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93401' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93437' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93460' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93524' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93561' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93657' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93727' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93907' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93933' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93940' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93943' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93955' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94002' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94015' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94040' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94043' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94061' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94063' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94066' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94080' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94085' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94087' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94102' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94109' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94114' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94116' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94118' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94132' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94143' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94234' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94303' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94306' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94309' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94402' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94501' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94509' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94523' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94526' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94534' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94536' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94538' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94539' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94542' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94545' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94546' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94550' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94551' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94553' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94558' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94566' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94571' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94575' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94577' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94583' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94588' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94590' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94591' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94596' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94598' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94607' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94608' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94609' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94610' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94618' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94701' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94703' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94706' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94707' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94708' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94803' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94806' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94901' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94904' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94920' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94923' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94928' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94939' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94949' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94960' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94965' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94970' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94998' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95005' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95020' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95039' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95045' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95051' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95053' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95060' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95070' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95120' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95133' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95134' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95135' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95136' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95138' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95193' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95207' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95211' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95307' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95348' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95351' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95370' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95422' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95449' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95482' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95518' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95616' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95617' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95621' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95670' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95678' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95758' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95762' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95812' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95814' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95816' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95817' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95818' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95819' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95820' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95822' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95825' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95827' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95828' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95833' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95841' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95842' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95929' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95973' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96001' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96091' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96094' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96145' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96150' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Calculation_981221806949744640:nk]' member='&quot;Yes&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90019' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90024' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90027' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90034' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90049' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90057' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90059' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90065' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90071' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90073' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90089' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90095' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90210' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90212' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90230' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90245' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90250' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90254' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90277' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90291' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90404' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90405' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90502' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90504' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90601' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90630' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90640' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90650' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90717' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90740' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='90840' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91006' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91016' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91101' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91103' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91107' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91129' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91203' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91320' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91330' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91335' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91355' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91360' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91365' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91367' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91380' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91423' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91604' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91765' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91768' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91775' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91902' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91911' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='91942' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92007' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92009' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92028' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92037' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92038' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92056' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92068' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92093' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92096' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92121' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92123' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92124' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92126' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92152' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92173' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92182' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92220' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92333' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92507' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92612' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92614' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92626' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92646' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92647' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92660' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92672' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92675' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92677' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92697' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92821' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92834' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='92870' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93023' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93106' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93117' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93302' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93311' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93407' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93561' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93711' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93940' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93943' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93950' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='93955' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94002' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94022' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94025' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94061' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94080' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94085' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94086' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94102' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94104' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94105' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94108' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94110' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94111' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94114' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94115' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94122' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94131' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94143' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94234' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94301' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94303' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94304' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94305' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94306' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94309' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94402' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94501' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94523' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94534' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94536' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94542' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94545' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94546' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94551' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94553' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94555' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94583' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94588' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94590' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94596' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94606' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94607' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94608' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94609' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94610' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94611' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94704' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94705' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94707' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94709' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94710' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94720' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94801' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94803' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94901' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94904' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94920' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94928' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94949' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94960' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='94998' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95008' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95010' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95014' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95020' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95032' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95035' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95039' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95051' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95053' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95054' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95060' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95064' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95070' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95112' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95125' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95133' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95134' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95135' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95136' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95138' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95192' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95211' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95354' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95403' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95449' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95503' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95521' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95605' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95616' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95741' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95747' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95758' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95762' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95814' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95818' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95819' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95822' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95828' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95831' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95841' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95929' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='95973' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96003' />
                  <groupfilter function='member' level='[none:ZIP Code:ok]' member='96008' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Personal Loan:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Personal Loan:ok]' member='0' />
              <groupfilter function='member' level='[none:Personal Loan:ok]' member='1' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Inclusions (Personal Loan,ZIP Code)]</column>
            <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Personal Loan:ok]</column>
            <column>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Inclusions (Personal Loans,ZIP Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Longitude (generated)]' field-type='quantitative' max='-11943229.082308909' min='-14288164.9852104' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Latitude (generated)]' field-type='quantitative' max='5188813.7411223091' min='3825546.6571994554' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' />
              <lod column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:ZIP Code:ok]' />
              <geometry column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Latitude (generated)]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Who are the Online Customers?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bank_Personal_Loan_Modelling (1)' name='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh' />
          </datasources>
          <datasource-dependencies datasource='federated.0wra9qg1n30tdv1gu2fzy0pw1cqh'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Income (bin)' datatype='integer' name='[Income (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[Income]' peg='0' size='11.2' />
            </column>
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Online]' role='dimension' type='ordinal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income (bin)]' derivation='None' name='[none:Income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Online]' derivation='None' name='[none:Online:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Online:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:Age:qk]</rows>
        <cols>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income (bin):ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Income, Family Size and Personal Loans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[:Measure Names]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Family:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81F2F568-D11F-46BB-ABDB-FBBFE914F20B}' />
    </window>
    <window class='worksheet' name='Age vs Average Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Personal Loan:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Age (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BC23446-6535-4768-AD42-5A7C49729F54}' />
    </window>
    <window class='worksheet' name='How Income and Age influence personal Loans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EEE5CC86-37E5-4DA6-9E78-A7DCE8DDA5A7}' />
    </window>
    <window class='worksheet' name='Impact of having a securities account'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Age (group)]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[med:Income:qk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CD Account:ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806951211010:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221808737165316:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income (bin):ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Securities Account:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C64A910E-BDF5-4E6C-8125-BD72941824E0}' />
    </window>
    <window class='worksheet' name='Experience and Credit Card Spending'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Experience (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE8BD44A-0309-44B7-8DFC-FEDD4203A770}' />
    </window>
    <window class='worksheet' name='How Income is related to Securities Accounts and Credit Cards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[Age (group)]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[avg:Experience:qk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[cnt:Calculation_981221806949744640:qk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Age (bin):ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CD Account:ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806951211010:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806957752323:nk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:CreditCard:ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Experience:qk]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Family:ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FD82EE1-4C94-49C9-ABD2-B743CEDB8517}' />
    </window>
    <window class='worksheet' name='Who are the Online Customers?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Online:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Income (bin):ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Online:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E02D1684-2EF2-4B3A-8E0E-2F4C7C56370B}' />
    </window>
    <window class='worksheet' maximized='true' name='Where are our customers?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Personal Loan:ok]</field>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:ZIP Code:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{236AF552-D8CD-4DF6-BD66-EEC8775AB978}' />
    </window>
    <window class='worksheet' name='Age And Experience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63CBAEB7-79A2-4054-8DD7-637BE914A1EB}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6514C31-F76B-4ABE-ACAA-5A4AA16046CB}' />
    </window>
    <window class='worksheet' name='Mortgage vs Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D7A2563-0A71-4062-8A45-83C9F24C99BD}' />
    </window>
    <window class='worksheet' name='Mortgage vs Income (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wra9qg1n30tdv1gu2fzy0pw1cqh].[none:Calculation_981221806949744640:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCBA69D5-F1F3-4CF4-BFC0-D342E7BD044B}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{560699D0-7646-408D-8B7A-34A1E15504BF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age And Experience' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age vs Average Income' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW/UlEQVR4nO3daYwcZ37f8W9V9THdc/ccnJMckcPhzeFKosTVtZFlx4aBxMgujIVj2Mh6
      13YWfhEYiIF9t4oQbAy/MAysgQQJ4gQIENjKGgiydmxD2ZUpUSJF8RKvITnDuTj39PR9VteR
      F5SoGZIz7Gf64FD1/wAE5nieqv9TrF9XdVVNP5rrui5CeJT+tAsQ4mmSAAhPkwAIT5MACE+T
      AHhQcnWexbX0lm2s3CpXbtwluhrDeVwD1+LKhUvkrcf+9pkhAfAcl3/4h5/yd+/9jK0u/124
      skykp5X3/v4MFgBFrl+9/WUDzUd3IMX5O8u1LbfGfE+7AFFfTnaBgn+ItsI8K9E5/vov/wY3
      XeSVX3+T93/yf8kQ4d/+4PcIj/TT16STjk7xV//tP9Jz7GVWbiwQnznDdK6VdFHn+7/xdX7+
      7k043Pu0h7VtcgTwmPk7t1hYnGJmcZEbly7QdPB1TuzvJbMyi9kyxC+++jwAhu6iadDcOcQv
      vXWK+NISruOCr4FX3/pnNOlJNF0D59k+BZIjgMe4zX387vdeo8Fc5d5anrWPT3N6JsG3/8l3
      eCX1EbF8ER8Qux0leqyffYNhzl5Z5q23Xmf+zgJtTSbNYYPR4yeITtyl++iBpz2kimhyJ9jD
      7Dznz57HFxnkxKHn0DXtwa/M1ByXp0xeHt37+L6uxScffcLRl0/R6DfqVHD11TUAjuOg63LW
      JXaOuu6Ntm3Xc3VCPJG8HAtPkwAIT5MACE+TAAhPkwAIT5MACE97du8E37wJpVL57Xt7obu7
      dvVsx9/+Lfz0p+W37+6Gd96pXT0eVNcbYaVSCb/fX52FDQzA/Hz57f/kT+CP/qg6666Wd96B
      H/6w/PbDwzA+Xrt6POjZPQLsBL29kMuV3/7HP4bf/u3qrd914d49tT6dnRAOf/l9PA7prf82
      YINIBJqavvw+mbz/r1x+//3ttkNIACqRSqkFwDSru37ThD171Pr85CfwrW99+f0778Cf/Vn5
      /f/iL+A73/ny+z/9U7XTsgMH4Nat8tvXmARAPF2l0v0QqfjmN2H//qqsXgIgnq5SCX7wA7U+
      Bw5ULQByGVR4mnePAKdP3z8fLldjI/zxH9euHrF9S0sQi5XfPhyGoSHAywG4ehX+/M/Lb9/R
      IQHYqX70o/tX2Mp16hScPQvIKZDwuIqPAFM3LzKzkmHf0echNs3EXIzjp14hPXOd6dU8oy+e
      pD1cpZtfQlRZxQHYNXSQnr4YE8tJ7CK89upxbly7ht3QwkvH+5leXKJt78CD9tW88aw9ucmX
      672/8nU/cCvrvxNqUOy/E2rYaWOoOABmNs5CzObgUA+3J7P4Ak1gZfA3dOP3B3CdLK7r4jgO
      juNgWValqwTApxgkx7Zx1q1bdxxU/5T74dpVa7BtG7eSGlx3Yw2WheqxtdIaduQYXFepBtd1
      sT/vX2EAbM5/fI5wZy+zjY04qRVOvz/D4MGTJKev8eE9i31HTqLrOrqu47pu9Z4F0tReNwzD
      wFi/bkNt99fg0doVa/AZxv1HAbZbg6ZtrGEbn8lTaQ1VH8M29odHalD8oAVd09A/719hAHR+
      4Vd/DRfQdQOt7xVs28Xn8+H2vIrtuPgM715oEjtfhXunhu+hBH8RRk0zVIMpRN3JLio8TQIg
      PE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxN
      AiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIg
      PE0CIDyt4gAUMjFmFlYBiM7f5fz58yzEsqSj83x2Y5yS+hwOQtRNxQFYi62RiCXBdVheTnHg
      6FG6Gl3GplbpanSYmF2uRp1C1ETF07f0795DamwOcCkWklz+9FOG9+4l3NFNd3cT8YU1HMfB
      tm0cx8E0zSqUDX7FidFs28Zet27dtpUG7wKlh2r/x10udr78ZRwK2PStW4Zh28pzW22owTQJ
      KPSH+/OcORXUYNl2Rf0fGUOpVPcxOK6L9Xn/igNQMouUSiZmyaZ/30FGAg43JpbR0FnzZdGN
      5gdzhJVKpac7R1ggsP4HaqsDAoGN/1X/4hWNnEKe/0u/wfcqqUHTNtawjRk3fT4fVFCDzzA2
      9D/TbXB2pPz+kb0a312//m1MmljpGPR127HyeYJvj5HN2swsJWjTs9y8l2H0+ROYsTnuLuc5
      drin0lWIHey9HnhntPz2B/rgu+u+L+rwuyfV1vlv2uEFtS6bqjgAI8deWvddN12fTwnc0DXI
      17oqXbr4qrM1+B9Dan2+Gd5BARDb9+8Pwb/7Vvnth3tgrHblPLP+uh8+OFF++6ER+MPPv5YA
      PEWOBpbCdbiH25oa/Mo31Nb5die8odZlxzvdBT/eX377UwNfgQCM/hIsrpXf/ofD8Ae1K+ep
      cDV4v1utzx801KaWZ9UzG4C1IKwq/Gfm1C4UCI94ZgNQqStt8I8Kh82GdvjXtSvnqfnRQfjv
      v1J++//QDwpvW3Y8zwbgw074Q4U3Th3NX80ArAZhvLn89qkq3cbZKeRhOOFpEgDhaRIA4Wll
      vAco8b/+849pHzmJrbXzy984WvuqhKiTMo4AebJ5mBsfJ63y5JcQz4AyAtDM6Nf2kzNL7Bvu
      rX1FQtRRGQFIcPlqlFNfP0lb+Ct2DUx4XhkBCIGTYGZmhmgiW/uKhKijMt4E2zRHBhgdHaWp
      LVL7ioSoozKOAD727eli7NYd1pK52lckRB2VEQCNyYk75OKLzK6ma1+REHVURgAKmG4Lx47t
      Jx1N1r4iIeqojAC08I03R0kVGnjz9SO1r0iIOiojADE++XSBk6P9fPDzK7WvSIg6KiMArbQG
      V/nLd99j8Mhzta9IiDoqIwAOjmVRsBzy6UztKxKijsq4D1CgaPTym7/5OrriBxAJsdNteQRw
      XQfLcjGTs7z77rucuzZdp7KEqI8tjwDZ+D3+z//+GQUA26Rk2fWpSog62TIATZE9/Mvf+Z16
      1SJE3Sn8RViB6aml2lUixFNQxptgF9M0cV2LQEAehxZfLWUEIMf//E//lVAkxJ2pNf7pt7/H
      yyOdta9MiDoo6wgQCLczMtJH3mkgfm8VJADiK6KMADTyy7/6BtNLcf75r71IIBDe8FvXdXG5
      P+mA67q4roum6cCXXyvOZSFE3ZR1I+z8hx+TDjTS0jXI/sGN7wOmbl1kLtXA6y8d4tr5j1hN
      Ztlz7Oukpj4jljXZf+IUe7oUPnpMiDoqIwAGnd0drE5NMTG7zP7Bjg2/3XvoOMWxOVzLQm/p
      5hde2sdnn5zD17WPb4w2cWchitPRiOM4OI5DqVSqSuGu4vRAjr1x3bateE/D5ZHa7x/7ymfb
      dkU1uK67of92tqVtbazBcdSm8fwqjGF9DWW9B9g1dJC+4RGKhDZtpWlglSzsUhZ8YSyziFUK
      oOkGmqZhGAau696f36kKNMXzKt3QN6xbNxQ/E0zjkdo1pWn67s9TtqEGXa0GTdM29Ldd9RuT
      D9eg6U93DD5bfX+odAzra9hy7cVMlA9+dpqFeJzJu2t8+/e/+0ibmxfPMbWUxQ2GiARtPvzo
      Ksdf/jqp6Wt8cm2Z0edPbthZVXfcatpQh+LO+3D/qtSwjeVVvC216m6HZ30MWwbALKSZX1jB
      F2mjt6eRge62R9ocfuENDj/4rpfdB+5/1XH4eeThabHTbRmA5s7n+Fff/z5mLsnlC59y89Ys
      p47vrVdtQtRcWSdggXArL7/xi7WuRYi6k0+HFp4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4m
      ARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ5Wnb9QV2WakFWcdLu9vTa1CE97
      OgF49134rd8qv72ug+rHmAhRBjkFEp4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQ
      niYBEJ4mARCeVsVngVwmr33K9FqO4cPP48YmmVrJMfriSdrDMr+w2JmqdwRwHXJ2iFdfe43B
      Vpeo1cRLx/axuLj0YPZIYMPXZS96Xb/t9H+wnPXLUJzf65H+1ahhG8uodAy4yBjW1VDFI4BG
      OGBx/uMPaWvvxh9qxR8I4jo5XNfdMEmebtvKK35kgjrFgT88uZtjq02sVotJ8iqZ3A3Asiyl
      /o+rwXbUnrKt+hhK9R+D4iR55S7UoWCa6LqOFmqmtDrJmXs2e4+8gK7r6LqO67r4/X5QnChP
      AwKBwMafKc4tZRjGhmUYhqHUH+0xNWxjkrxKatA0bUN/V1N/9TN8D9Wgq9VQ7TFYrnoAKh3D
      +hqqFgBNMzhw7AVs28Xv9+E+14/luPirNCukELVQvb1T0zAMH1+8IGiGQUDxRVaIepPLoMLT
      JADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQA
      wtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtNqFACH
      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
      +/8BUdHzvrE+xNgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Experience and Credit Card Spending' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='How Income and Age influence personal Loans' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='How Income is related to Securities Accounts and Credit Cards' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of having a securities account' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income, Family Size and Personal Loans' width='192'>
      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
      AdEid/ozptf0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mortgage vs Income' width='192'>
      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
      hnClOFBdFtEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mortgage vs Income (2)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Where are our customers?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Who are the Online Customers?' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
